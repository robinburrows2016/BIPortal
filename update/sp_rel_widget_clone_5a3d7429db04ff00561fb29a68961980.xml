<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_rel_widget_clone">
    <sp_rel_widget_clone action="INSERT_OR_UPDATE">
        <child display_value="BI Tagged Question List">963d30e5db04ff00561fb29a689619e4</child>
        <cloned>2019-03-07 11:05:41</cloned>
        <last_validated>2019-03-07 11:05:41</last_validated>
        <parent display_value="Tagged Question List">f1542a16d701120023c84f80de6103c0</parent>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;sp_widget&gt;&lt;category&gt;other&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function questionListController($scope, spUtil, $timeout) {
	var c = this;
	spUtil.setBreadCrumb($scope, [
		{label: c.data.communityBreadcrumb, url: '#'}
	]);
  c.mode = getMode();
	function getMode() {
		if (!c.data.tagID)
			return "all";
		
		if (c.data.tagID == "-1")
			return "favorites";
		
		return "tag";
	}

	c.getSysIDParam = function() {
		return (c.data.tagID) ? "&amp;sys_id=" + c.data.tagID : "";
	}

	c.capitalize = function(str) {
		if (str.length === 0)
			return "";

		return str.charAt(0).toUpperCase() + str.slice(1);
	}

	$scope.$on("sp-favorite-tags-updated", function() {
		c.data.tagID = -1;
		$scope.server.update().then(function() {
			c.mode = getMode();
		});
	})
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;a.question-tag {
    color: #39739d;
    background-color: #e1ecf4;
    border: 1px solid #e1ecf4;
    display: inline-block;
    margin: 4px 4px 4px 0;
    border-radius: 0;
    text-align: center;
    line-height: 1;
    padding: .4em .5em;
  	font-size: .9em;
}

.list-header {
  border-bottom: 1px solid #ddd;
  margin-left: -15px;
  margin-right: -15px;
}

.list-header &amp;gt; h3 {
  display: inline-block;
  float: left;
  margin-top: 0px;
  margin-left: 15px;
}

.question {
  display: flex;
  margin-left: -15px;
  margin-right: -15px;
  padding-left: 15px;
  padding-right: 15px;
}

.panel-body .question-list .question:last-of-type {
  border-bottom:none;
}

.stats-container {
  flex: 0 0 auto;
  width: 55px;
  height: 100%;
  margin-left: 8px;
  margin-right: 8px;
}

.summary {
  flex: 1 1 auto;
  word-wrap: break-word;
  overflow-x: auto;
}

.stats-container {
  padding-top: 6px;
}

.stat {
  padding: 1px;
}

.stat-count {
  display: block;
  text-align: center;
  font-size: 1.5em;
}

.stat-label {
  text-align: center;
}

.empty-state-content {
  margin-top: 30px;
  
  .fa-comments {
    color: $gray-light;
    font-size: 80px;
    display: block;
    text-align: center;
  }
  
  h3 {
    text-align: center;
    margin-bottom: 5px;
  }
  
  p {
    text-align: center;
    margin-bottom: 20px;
  }
  
  .btn {
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: 300px;
    max-width: 100%;
    margin-bottom: 35px;
  }
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;tagged-question-list&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link/&gt;&lt;name&gt;Tagged Question List&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;true&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
	data.communityBreadcrumb = gs.getMessage("Community");
	data.msgs = {};
	data.msgs.newest = gs.getMessage("Newest");
	data.msgs.unanswered = gs.getMessage("Unanswered");
	data.msgs.top = gs.getMessage("Top");
	data.knowledgeBase = $sp.getPortalRecord().getValue("sqanda_knowledge_base") || gs.getProperty("glide.service_portal.sqanda.default_kb");
	//If no questions have been asked yet, don't load anything up.
	data.noQuestionsExist = false;
	var allQuestionsGR = new GlideRecord("kb_social_qa_question");
	allQuestionsGR.addActiveQuery();
	allQuestionsGR.addQuery("kb_knowledge_base", data.knowledgeBase);
	allQuestionsGR.query();
	if (allQuestionsGR.getRowCount() === 0) {
		data.noQuestionsExist = true;
		return;
	}

	var sortTypes = ['newest', 'top', 'unanswered'];
	data.tagID = (input &amp;&amp; input.tagID) || $sp.getParameter("sys_id");

	if (data.tagID &amp;&amp; data.tagID != "-1") {
		var labelGR = new GlideRecord("sqanda_tag");
		if (!labelGR.get(data.tagID))
			data.tagID = null;
	}

	data.page = $sp.getParameter("page") || 1;
	data.page = parseInt(data.page);
	if (isNaN(data.page))
		data.page = 1;

	var pageCount = 20;

	data.sort = (input &amp;&amp; input.sort) || $sp.getParameter("sort") || "newest";
	if (!contains(sortTypes, data.sort))
		data.sort = "newest";

	var entryIDs = [];

	if (data.tagID != null) {
		var labelEntryGR = new GlideRecord("sqanda_tag_entry");
		labelEntryGR.addQuery("reference_name", "kb_social_qa_question");
		if (data.tagID != "-1") {
			data.tagName = labelGR.getValue("name");
			labelEntryGR.addQuery("tag", data.tagID);
		} else {
			var loggedInSysUserID = gs.getUser().getID();
			var liveProfileID = "";
			var liveProfileGR = new GlideRecord("live_profile");
			liveProfileGR.addQuery("document", loggedInSysUserID);
			liveProfileGR.query();
			if (liveProfileGR.next())
				liveProfileID = liveProfileGR.getValue("sys_id");

			var tagIDs = [];
			var userTagsGR = new GlideRecord("sqanda_tag_entry");
			userTagsGR.addQuery("reference_name", "live_profile");
			userTagsGR.addQuery("reference_id", liveProfileID);
			userTagsGR.addNotNullQuery("tag");
			userTagsGR.query();
			while (userTagsGR.next()) {
				tagIDs.push(userTagsGR.getValue("tag"));
			}

			labelEntryGR.addQuery("tag", "IN", tagIDs.join(","));
			if (tagIDs.length == 0)
				data.tagID = null;
		}

		labelEntryGR.query();

		entryIDs = [];
		while (labelEntryGR.next())
			entryIDs.push(labelEntryGR.getValue("reference_id"));
	}

	var questionGR = new GlideRecord("kb_social_qa_question");
	questionGR.addQuery("kb_knowledge_base", data.knowledgeBase);
	questionGR.addActiveQuery();

	if (data.tagID != null)
		questionGR.addQuery("sys_id", "IN", entryIDs.concat(","));

	if (data.sort.equals("newest"))
		questionGR.orderByDesc('sys_created_on');
	else
		questionGR.orderByDesc('votes');

	if (data.sort.equals("unanswered"))
		questionGR.addQuery("answer_count", 0);

	questionGR.chooseWindow((data.page - 1) * pageCount, (data.page - 1) * pageCount + pageCount, true);
	questionGR.query();

	data.hasNextPage = (questionGR.getRowCount() &gt; ((data.page - 1) * pageCount + pageCount));

	data.questions = [];
	while (questionGR.next())
		data.questions.push(new Question(questionGR))
		})();

function Question(gr) {
	this.question = gr.getValue("question");
	this.question_details = gr.getValue("question_details");
	this.sys_id = gr.getUniqueValue();
	this.votes = parseInt(gr.getValue("votes")) || 0;
	this.tags = [];
	this.profile = new Profile(gr.getElement("profile").getRefRecord());
	this.sys_created_on = gr.getValue("sys_created_on");
	this.answer_count = parseInt(gr.getValue("answer_count")) || 0;

	var labelEntryGR = new GlideRecord("sqanda_tag_entry");
	labelEntryGR.addQuery("reference_id", this.sys_id);
	labelEntryGR.query();

	while(labelEntryGR.next()) {
		this.tags.push(new Tag(labelEntryGR.getElement("tag").getRefRecord()));
	}	
}

function Profile(gr) {
	this.name = gr.getValue("name");
	this.sys_id = gr.getValue("sys_id");
	this.document = {
		sys_id: gr.getValue("document")
	};
}

function Tag(gr) {
	this.sys_id = gr.getUniqueValue();
	this.name = gr.getValue('name');
}

function contains(arr, str) {
	for (var i = 0; i &lt; arr.length; i++) {
		if (arr[i].equals(str))
			return true;
	}

	return false;
}]]&gt;&lt;/script&gt;&lt;servicenow&gt;true&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2016-01-21 18:27:55&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;false&lt;/sys_customer_update&gt;&lt;sys_id&gt;f1542a16d701120023c84f80de6103c0&lt;/sys_id&gt;&lt;sys_mod_count&gt;223&lt;/sys_mod_count&gt;&lt;sys_name&gt;Tagged Question List&lt;/sys_name&gt;&lt;sys_package display_value="Service Portal Social QA" source="com.glide.service-portal.sqanda"&gt;5e1c66264ff032002292a4eab110c73b&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_f1542a16d701120023c84f80de6103c0&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2017-06-16 15:55:48&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="panel panel-default"&gt;
  &lt;div ng-if="data.noQuestionsExist" class="panel-body"&gt;
    &lt;div class="empty-state-content"&gt;
      &lt;span class="fa fa-comments" aria-label="${Question icon}"&gt;&lt;/span&gt;
      &lt;h3&gt;${No questions have been asked yet}&lt;/h3&gt;
      &lt;p&gt;${Once questions are asked, they will show up here. You can be the first!}&lt;/p&gt;
      &lt;a href="?id=sqanda_new_question" class="btn btn-primary"&gt;${Ask a Question}&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  
  &lt;div ng-if="!data.noQuestionsExist" class="panel-body"&gt;
    &lt;div class="list-header"&gt;
      &lt;h3 ng-if="c.mode == 'tag'"&gt;${Tagged Questions} | {{::data.msgs[data.sort]}} | {{::data.tagName}}&lt;/h3&gt;
      &lt;h3 ng-if="c.mode == 'favorites'"&gt;${My Favorite Tags} | {{::data.msgs[data.sort]}}&lt;/h3&gt;
      &lt;h3 ng-if="c.mode == 'all'"&gt;${Questions} | {{::data.msgs[data.sort]}}&lt;/h3&gt;
      &lt;ul class="nav nav-tabs pull-right" style="margin-bottom: -1px;"&gt;
        &lt;li role="presentation" ng-class="{'active': data.sort==='newest'}"&gt;&lt;a ng-href="?id=sqa_tagged_questions&amp;sort=newest{{c.getSysIDParam()}}"&gt;{{::data.msgs.newest}}&lt;/a&gt;&lt;/li&gt;
        &lt;li role="presentation" ng-class="{'active': data.sort==='top'}"&gt;&lt;a ng-href="?id=sqa_tagged_questions&amp;sort=top{{c.getSysIDParam()}}"&gt;{{::data.msgs.top}}&lt;/a&gt;&lt;/li&gt;
        &lt;li role="presentation" ng-class="{'active': data.sort==='unanswered'}"&gt;&lt;a ng-href="?id=sqa_tagged_questions&amp;sort=unanswered{{c.getSysIDParam()}}"&gt;{{::data.msgs.unanswered}}&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
      &lt;div class="spacer" style="clear: both;"&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;ul class="question-list"&gt;
      &lt;li ng-repeat="question in data.questions" class="question light-border-bottom padder-b"&gt;
        &lt;div class="stats-container"&gt;
          &lt;div class="stat"&gt;
            &lt;span class="stat-count"&gt;{{question.votes}}&lt;/span&gt;
            &lt;div ng-if="question.votes === 1" class="stat-label"&gt;${Vote}&lt;/div&gt;
            &lt;div ng-if="question.votes !== 1" class="stat-label"&gt;${Votes}&lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="stat"&gt;
            &lt;span class="stat-count"&gt;{{question.answer_count}}&lt;/span&gt;
            &lt;div ng-if="question.answer_count === 1" class="stat-label"&gt;${Answer}&lt;/div&gt;
            &lt;div ng-if="question.answer_count !== 1" class="stat-label"&gt;${Answers}&lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="summary"&gt;
          &lt;h4&gt;&lt;a ng-href="?id=kb_social_qa_question&amp;sys_id={{question.sys_id}}"&gt;{{question.question}}&lt;/a&gt;&lt;/h4&gt;
          &lt;sp-html-content model="question.question_details"&gt;&lt;/sp-html-content&gt;
          &lt;div role="list"&gt;
             &lt;span role="listitem" ng-repeat="tag in question.tags" &gt;
              	&lt;a ng-href="?id=sqa_tagged_questions&amp;sys_id={{tag.sys_id}}" class="question-tag"&gt;{{tag.name}}&lt;/a&gt;
             &lt;/span&gt;
            &lt;div class="pull-right"&gt;
              &lt;sn-time-ago timestamp="question.sys_created_on"&gt;&lt;/sn-time-ago&gt; &amp;middot; &lt;a ng-href="?id=user_profile&amp;sys_id={{question.profile.document.sys_id}}"&gt;{{question.profile.name}}&lt;/a&gt; &lt;sn-avatar class="m-l-xs hidden-xs" primary="question.profile.document.sys_id"&gt;&lt;/sn-avatar&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;div ng-if="data.questions.length == 0" class="m-t alert alert-info" role="alert"&gt;
        &lt;span ng-if="c.mode == 'all'"&gt;${There are currently no {{data.sort}} questions to display}&lt;/span&gt;
        &lt;span ng-if="c.mode == 'favorites'"&gt;${There are currently no {{data.sort}} questions with your favorite tags}&lt;/span&gt;
        &lt;span ng-if="c.mode == 'tag'"&gt;${There are currently no {{data.sort}} questions tagged with "{{c.capitalize(data.tagName)}}"}&lt;/span&gt;
      &lt;/div&gt;
    &lt;/ul&gt;
    &lt;nav ng-if="data.page &gt; 1 || data.hasNextPage"&gt;
      &lt;ul class="pager"&gt;
        &lt;li&gt;&lt;a ng-if="data.page &gt; 1" ng-href="?id=sqa_tagged_questions{{c.getSysIDParam()}}&amp;sort={{data.sort}}&amp;page={{data.page - 1}}"&gt;${Previous}&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a ng-if="data.hasNextPage" ng-href="?id=sqa_tagged_questions{{c.getSysIDParam()}}&amp;sort={{data.sort}}&amp;page={{data.page + 1}}"&gt;${Next}&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/nav&gt;
  &lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;</payload>
        <sys_class_name>sp_rel_widget_clone</sys_class_name>
        <sys_created_by>robin.burrows@baesystems.com</sys_created_by>
        <sys_created_on>2019-03-07 11:05:41</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>5a3d7429db04ff00561fb29a68961980</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>963d30e5db04ff00561fb29a689619e4</sys_name>
        <sys_package display_value="Business Improvement Portal" source="x_baes2_busimprove">cecbd46adb3a2780561fb29a6896192f</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Business Improvement Portal">cecbd46adb3a2780561fb29a6896192f</sys_scope>
        <sys_update_name>sp_rel_widget_clone_5a3d7429db04ff00561fb29a68961980</sys_update_name>
        <sys_updated_by>robin.burrows@baesystems.com</sys_updated_by>
        <sys_updated_on>2019-03-07 11:05:41</sys_updated_on>
    </sp_rel_widget_clone>
</record_update>
